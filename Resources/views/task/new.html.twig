{# SDROAccountBundle/Resources/views/task/new.html.twig #}

{# ... #}

{{ form_start(form) }}
{# render the task's only field: description #}
{{ form_row(form.description) }}

<h3>Tags</h3>
<ul class="tags" data-prototype="{{ form_widget(form.tags.vars.prototype)|e('html_attr') }}">
    {# iterate over each existing tag and render its only field: name #}
    {% for tag in form.tags %}
        <li>{{ form_row(tag.name) }}</li>
        {% endfor %}
</ul>
        <button type="submit">Save</button>
{{ form_end(form) }}

{# ... #}

<script type="text/javascript">

    var $collectionHolder;
// setup an "add a tag" link
    var $addTagLink = $('<a href="#" class="add_tag_link">Add a tag</a>');
    var $newLinkLi = $('<li></li>').append($addTagLink);
    jQuery(document).ready(function () {
// Get the ul that holds the collection of tags
        $collectionHolder = $('ul.tags');
// add the "add a tag" anchor and li to the tags ul
        $collectionHolder.append($newLinkLi);
// count the current form inputs we have (e.g. 2), use that as the new
// index when inserting a new item (e.g. 2)
        $collectionHolder.data('index', $collectionHolder.find(':input').length);

        $addTagLink.on('click', function (e) {
// prevent the link from creating a "#" on the URL
            e.preventDefault();
// add a new tag form (see next code block)
            addTagForm($collectionHolder, $newLinkLi);
        });
    });

    function addTagForm($collectionHolder, $newLinkLi) {
// Get the data-prototype explained earlier
        var prototype = $collectionHolder.data('prototype');
// get the new index
        var index = $collectionHolder.data('index');
// Replace '__name__' in the prototype's HTML to
// instead be a number based on how many items we have
        var newForm = prototype.replace(/__name__/g, index);
// increase the index with one for the next item
        $collectionHolder.data('index', index + 1);
// Display the form in the page in an li, before the "Add a tag" link li
        var $newFormLi = $('<li></li>').append(newForm);
        $newLinkLi.before($newFormLi);
    }

    jQuery(document).ready(function () {
// Get the ul that holds the collection of tags
        $collectionHolder = $('ul.tags');
// add a delete link to all of the existing tag form li elements
        $collectionHolder.find('li').each(function () {
            addTagFormDeleteLink($(this));
        });
// ... the rest of the block from above
    });
    function addTagForm() {
// ...
// add a delete link to the new form
        addTagFormDeleteLink($newFormLi);
    }
    function addTagFormDeleteLink($tagFormLi) {
        var $removeFormA = $('<a href="#">delete this tag</a>');
        $tagFormLi.append($removeFormA);
        $removeFormA.on('click', function (e) {
// prevent the link from creating a "#" on the URL
            e.preventDefault();
// remove the li for the tag form
            $tagFormLi.remove();
        });
    }

</script>